# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set -g update-environment -r
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# 256-color terminal
#set-option -g default-terminal "screen-256color"

# Add truecolor support (tmux info | grep Tc)
#set-option -ga terminal-overrides ",xterm-256color:Tc"

# Key binding in the status line (bind-key :)
set-option -g status-keys vi

# Mouse
set-option -g mouse on

# Set clipboard to off  otherwise there will be a race whether st or xclip sets the clipboard.
# https://github.com/tmux/tmux/issues/1119#issuecomment-337496419
set -g set-clipboard on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix
bind-key -n C-b send-prefix

# prefix v
bind-key v split-window -h -c "#{pane_current_path}"

# prefix s
bind-key s split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Resize
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h resize-pane -R 5
bind -n M-j resize-pane -D 5
bind -n M-k resize-pane -U 5
bind -n M-l resize-pane -L 5

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Maximize
bind -n M-z resize-pane -Z
bind-key z resize-pane -Z

# Shift arrow to switch windows
bind -n M-, previous-window
bind -n M-. next-window

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# Selection
bind-key C-v run "xclip -selection clipboard -o | tmux load-buffer - ; tmux paste-buffer"
bind-key C-c copy-mode
bind-key -T copy-mode-vi Space send -X halfpage-down
bind-key -T copy-mode-vi Bspace send -X halfpage-up
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle

bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -selection primary"
bind-key -T copy-mode-vi 'Y' send -X copy-pipe-and-cancel "cat > /tmp/xclip.tmp; xclip -i /tmp/xclip.tmp ; tmux load-buffer /tmp/xclip.tmp ; tmux paste-buffer"

# For vi copy mode bindings
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"


bind-key -T magic V send-keys C-m \; send-keys 'vim ' \; paste-buffer \; send-keys C-m
bind-key -T magic o send-keys C-m \; send-keys 'xdg-open ' \; paste-buffer \; send-keys C-m
bind-key -T magic n run-shell "tmux-select-stuff --log --direction next" \; switch-client -T magic
bind-key -T magic p run-shell "tmux-select-stuff --log --direction prev" \; switch-client -T magic
bind-key -T magic C-e run-shell "tmux-select-stuff --log --direction next" \; switch-client -T magic

# No delay for escape key press, otherwise after esc is press you have # time to press a 'tmux bind-key' which we don't want
set -sg escape-time 0

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

bind-key C-e copy-mode \; send -X search-forward "trace"

# Un/hide status bar
bind-key G set status

set-option -g status-justify left

set-option -g status "off"

## default statusbar colors
set-option -g status-bg "none"
set-option -g status-fg "none"
#
#set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
#set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[fg=colour246,bg=colour239] %Y-%m-%d  %H:%M #[fg=colour248, bg=colour239, nobold, noitalics, nounderscore]#[fg=colour237, bg=colour248] #h "
#
set-window-option -g window-status-current-format "#[fg=colour239, bg=colour214](#I)#W"
set-window-option -g window-status-format "(#I)#W"
#set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour223,bg=colour239] #I #[fg=colour223, bg=colour239] #W #[fg=colour239, bg=colour237, noitalics]"


# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"
bind-key -n 'M-u' run "tmux split-window $(/usr/bin/python3 /home/joetoth/bin/python/blackhole.py \"{'context': 'tmux', 'pane_id': '#{pane_id}'}\")"
#bind-key -n 'M-u' run "/usr/bin/python3 /home/joetoth/bin/python/blackhole.py {'context': 'tmux', 'pane_id': #{pane_id}}"
#bind-key -n 'M-u' new-window "/home/joetoth/bin/python/sel.py"

#bind-key -T copy-mode-vi e send -X copy-pipe-and-cancel "/usr/bin/python3 /home/joetoth/bin/python/sel.py"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

#bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection c"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#run-shell ~/.zplug/repos/Morantron/tmux-fingers/tmux-fingers.tmux
run-shell ~/.zplug/repos/fcsonline/tmux-thumbs/tmux-thumbs.tmux

bind-key "r" run-shell "~/bin/python/blackhole.py > ~/.tmux-buffer-tmp" \; load-buffer -b tmp-copy-buffer ~/.tmux-buffer-tmp \; paste-buffer -b tmp-copy-buffer -d \; run-shell -b "rm ~/.tmux-buffer-tmp"
# bind-key "Z" run-shell "xclip -selection primary -o > ~/.tmux-buffer-tmp" \; load-buffer -b tmp-copy-buffer ~/.tmux-buffer-tmp \; paste-buffer -b tmp-copy-buffer -d \; run-shell -b "rm ~/.tmux-buffer-tmp"
